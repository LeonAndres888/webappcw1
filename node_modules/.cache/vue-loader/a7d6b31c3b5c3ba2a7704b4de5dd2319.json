{"remainingRequest":"C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\node_modules\\vue-loader\\dist\\index.js??ruleSet[0].use[1]!C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\src\\App.vue","mtime":1710028575482},{"path":"C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\node_modules\\css-loader\\dist\\cjs.js","mtime":1709505055294},{"path":"C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\node_modules\\vue-loader\\dist\\stylePostLoader.js","mtime":1709505063950},{"path":"C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1709505052681},{"path":"C:\\Users\\andre\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1697844224500},{"path":"C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\node_modules\\vue-loader\\dist\\index.js","mtime":1709505059911}],"contextDependencies":[],"result":["\n/* Global styles */\n",{"version":3,"sources":["C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\src\\App.vue"],"names":[],"mappings":";AA4GA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC","file":"C:/Users/andre/OneDrive/Desktop/CW2FinalFolder/webappcw1/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"app\">\n    <parent-component\n      :sitename=\"sitename\"\n      :cartItemCount=\"cartItemCount\"\n      @toggle-cart=\"toggleCart\"\n    />\n    <lesson-component\n      v-if=\"showProduct\"\n      :lessons=\"sortedProducts\"\n      @add-to-cart=\"addItemToCart\"\n    />\n    <checkout-component\n      v-else\n      :cart=\"cart\"\n      @remove-from-cart=\"removeItemFromCart\"\n    />\n  </div>\n</template>\n\n<script>\nimport ParentComponent from \"./components/ParentComponent.vue\";\nimport LessonComponent from \"./components/LessonComponent.vue\";\nimport CheckoutComponent from \"./components/CheckoutComponent.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    ParentComponent,\n    LessonComponent,\n    CheckoutComponent,\n  },\n  data() {\n    return {\n      sitename: \"👨‍🎓 STUDY SESSION STORE 👩‍🎓\",\n      showProduct: true,\n      products: [],\n      cart: [],\n      searchLesson: \"\",\n      sortAttribute: \"title\",\n      sortOrder: \"ascending\",\n    };\n  },\n  computed: {\n    cartItemCount() {\n      // Calculates the total count of items in the cart\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\n    },\n    sortedProducts() {\n      // Returns the products sorted based on the selected attribute and order\n      let sorted = [...this.products].sort((a, b) => {\n        let comparison = 0;\n        if (a[this.sortAttribute] < b[this.sortAttribute]) {\n          comparison = -1;\n        } else if (a[this.sortAttribute] > b[this.sortAttribute]) {\n          comparison = 1;\n        }\n        return this.sortOrder === \"ascending\" ? comparison : comparison * -1;\n      });\n      return sorted;\n    },\n  },\n  methods: {\n    toggleCart() {\n      // Toggles between showing the product list and the cart\n      this.showProduct = !this.showProduct;\n    },\n    addItemToCart(product) {\n      // Adds an item to the cart or increases its quantity if it's already in the cart\n      let found = this.cart.find((item) => item.id === product.id);\n      if (found) {\n        found.quantity += 1;\n      } else {\n        this.cart.push({ ...product, quantity: 1 });\n      }\n    },\n    removeItemFromCart(item) {\n      // Removes an item from the cart\n      const index = this.cart.findIndex((cartItem) => cartItem.id === item.id);\n      if (index !== -1) {\n        this.cart.splice(index, 1);\n      }\n    },\n    fetchLessons() {\n      // Fetches lesson data from the server\n      fetch(\n        \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons\"\n      )\n        .then((response) => {\n          if (!response.ok) throw new Error(\"Network response was not ok\");\n          return response.json();\n        })\n        .then((data) => {\n          this.products = data;\n        })\n        .catch((error) => {\n          console.error(\"Error fetching lessons:\", error);\n        });\n    },\n  },\n  mounted() {\n    // Fetches lessons when the component mounts\n    this.fetchLessons();\n  },\n};\n</script>\n\n<style>\n/* Global styles */\n</style>\n"]}]}