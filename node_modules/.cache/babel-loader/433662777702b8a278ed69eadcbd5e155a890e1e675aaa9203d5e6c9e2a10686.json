{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LessonComponent from \"./LessonComponent.vue\";\nimport CheckoutComponent from \"./CheckoutComponent.vue\";\nexport default {\n  components: {\n    LessonComponent,\n    CheckoutComponent\n  },\n  data() {\n    return {\n      sitename: \"👨‍🎓 STUDY SESSION STORE 👩‍🎓\",\n      showProduct: true,\n      products: [],\n      cart: [],\n      searchLesson: \"\",\n      sortAttribute: \"title\",\n      sortOrder: \"\",\n      custName: \"\",\n      custPhone: \"\",\n      orderSubmitted: false\n    };\n  },\n  computed: {\n    cartItemCount() {\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\n    },\n    validCheckout() {\n      const nameRegex = /^[A-Za-z\\s]+$/;\n      const phoneRegex = /^[0-9()-]+$/;\n      return nameRegex.test(this.custName) && phoneRegex.test(this.custPhone);\n    }\n  },\n  methods: {\n    fetchLessons() {\n      fetch(\"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons\").then(response => response.json()).then(data => {\n        this.products = data;\n      }).catch(error => {\n        console.error(\"Error fetching lessons:\", error);\n      });\n    },\n    submitOrder() {\n      if (!this.validCheckout) {\n        alert(\"Please enter a valid name and phone number to submit the order.\");\n        return;\n      }\n      const order = {\n        name: this.custName,\n        phoneNumber: this.custPhone,\n        items: this.cart.map(item => ({\n          lessonId: item._id,\n          quantity: item.quantity\n        }))\n      };\n      console.log(\"Order items before submitting:\", order.items);\n      fetch(\"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/orders\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(order)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        this.orderSubmitted = true;\n        console.log(\"Order submitted:\", data);\n        this.cart = [];\n        this.custName = \"\";\n        this.custPhone = \"\";\n        return this.updateLessonSpaces(order.items, true);\n      }).then(() => {\n        this.fetchLessons();\n      }).catch(error => {\n        console.error(\"Error submitting order:\", error);\n      });\n    },\n    updateLessonSpaces(orderedItems, isOrderSubmitted = false) {\n      if (!isOrderSubmitted) {\n        return Promise.resolve();\n      }\n      const updatePromises = orderedItems.map(item => {\n        return fetch(`https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons/${item.lessonId}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            numberToDecrease: item.quantity\n          })\n        }).then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        });\n      });\n      return Promise.all(updatePromises).then(() => {\n        this.fetchLessons();\n      }).catch(error => {\n        console.error(\"Error updating lessons:\", error);\n      });\n    },\n    canAddToCart(product) {\n      const cartItem = this.cart.find(item => item.id === product.id);\n      return cartItem ? cartItem.quantity < product.availableInventory : product.availableInventory > 0;\n    },\n    addItemCart(product) {\n      if (!this.canAddToCart(product)) {\n        alert(\"This lesson cannot be added to the cart.\");\n        return;\n      }\n      const cartItem = this.cart.find(item => item.id === product.id);\n      if (cartItem) {\n        cartItem.quantity++;\n      } else {\n        this.cart.push({\n          ...product,\n          quantity: 1\n        });\n      }\n    },\n    updateSortOrder(order) {\n      this.sortOrder = order;\n    },\n    removeItemCart(item) {\n      const cartItemIndex = this.cart.findIndex(cartItem => cartItem.id === item.id);\n      if (cartItemIndex > -1) {\n        const cartItem = this.cart[cartItemIndex];\n        if (cartItem.quantity > 1) {\n          cartItem.quantity--;\n        } else {\n          this.cart.splice(cartItemIndex, 1);\n        }\n      }\n    },\n    toggleCart() {\n      this.showProduct = !this.showProduct;\n    }\n  },\n  mounted() {\n    this.fetchLessons();\n  }\n};","map":{"version":3,"names":["LessonComponent","CheckoutComponent","components","data","sitename","showProduct","products","cart","searchLesson","sortAttribute","sortOrder","custName","custPhone","orderSubmitted","computed","cartItemCount","reduce","total","item","quantity","validCheckout","nameRegex","phoneRegex","test","methods","fetchLessons","fetch","then","response","json","catch","error","console","submitOrder","alert","order","name","phoneNumber","items","map","lessonId","_id","log","method","headers","body","JSON","stringify","ok","Error","status","updateLessonSpaces","orderedItems","isOrderSubmitted","Promise","resolve","updatePromises","numberToDecrease","all","canAddToCart","product","cartItem","find","id","availableInventory","addItemCart","push","updateSortOrder","removeItemCart","cartItemIndex","findIndex","splice","toggleCart","mounted"],"sources":["C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\src\\components\\ParentComponent.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header>\r\n      <h1>{{ sitename }}</h1>\r\n      <button id=\"cartBtn\" @click=\"toggleCart\">\r\n        🛒 Cart ({{ cartItemCount }})\r\n      </button>\r\n    </header>\r\n    <main>\r\n      <lesson-component\r\n        v-if=\"showProduct\"\r\n        :products=\"products\"\r\n        @add-item-to-cart=\"addItemCart\"\r\n        :searchLesson=\"searchLesson\"\r\n        :sortAttribute=\"sortAttribute\"\r\n        :sortOrder=\"sortOrder\"\r\n      />\r\n      <checkout-component\r\n        v-else\r\n        :cart=\"cart\"\r\n        @remove-item-from-cart=\"removeItemCart\"\r\n        :validCheckout=\"validCheckout\"\r\n        :orderSubmitted=\"orderSubmitted\"\r\n        @submit-order=\"submitOrder\"\r\n      />\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LessonComponent from \"./LessonComponent.vue\";\r\nimport CheckoutComponent from \"./CheckoutComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    LessonComponent,\r\n    CheckoutComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      sitename: \"👨‍🎓 STUDY SESSION STORE 👩‍🎓\",\r\n      showProduct: true,\r\n      products: [],\r\n      cart: [],\r\n      searchLesson: \"\",\r\n      sortAttribute: \"title\",\r\n      sortOrder: \"\",\r\n      custName: \"\",\r\n      custPhone: \"\",\r\n      orderSubmitted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    cartItemCount() {\r\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    validCheckout() {\r\n      const nameRegex = /^[A-Za-z\\s]+$/;\r\n      const phoneRegex = /^[0-9()-]+$/;\r\n      return nameRegex.test(this.custName) && phoneRegex.test(this.custPhone);\r\n    },\r\n  },\r\n  methods: {\r\n    fetchLessons() {\r\n      fetch(\r\n        \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons\"\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.products = data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching lessons:\", error);\r\n        });\r\n    },\r\n    submitOrder() {\r\n      if (!this.validCheckout) {\r\n        alert(\r\n          \"Please enter a valid name and phone number to submit the order.\"\r\n        );\r\n        return;\r\n      }\r\n      const order = {\r\n        name: this.custName,\r\n        phoneNumber: this.custPhone,\r\n        items: this.cart.map((item) => ({\r\n          lessonId: item._id,\r\n          quantity: item.quantity,\r\n        })),\r\n      };\r\n      console.log(\"Order items before submitting:\", order.items);\r\n      fetch(\r\n        \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/orders\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(order),\r\n        }\r\n      )\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          this.orderSubmitted = true;\r\n          console.log(\"Order submitted:\", data);\r\n          this.cart = [];\r\n          this.custName = \"\";\r\n          this.custPhone = \"\";\r\n          return this.updateLessonSpaces(order.items, true);\r\n        })\r\n        .then(() => {\r\n          this.fetchLessons();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error submitting order:\", error);\r\n        });\r\n    },\r\n    updateLessonSpaces(orderedItems, isOrderSubmitted = false) {\r\n      if (!isOrderSubmitted) {\r\n        return Promise.resolve();\r\n      }\r\n      const updatePromises = orderedItems.map((item) => {\r\n        return fetch(\r\n          `https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons/${item.lessonId}`,\r\n          {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ numberToDecrease: item.quantity }),\r\n          }\r\n        ).then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        });\r\n      });\r\n      return Promise.all(updatePromises)\r\n        .then(() => {\r\n          this.fetchLessons();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating lessons:\", error);\r\n        });\r\n    },\r\n    canAddToCart(product) {\r\n      const cartItem = this.cart.find((item) => item.id === product.id);\r\n      return cartItem\r\n        ? cartItem.quantity < product.availableInventory\r\n        : product.availableInventory > 0;\r\n    },\r\n    addItemCart(product) {\r\n      if (!this.canAddToCart(product)) {\r\n        alert(\"This lesson cannot be added to the cart.\");\r\n        return;\r\n      }\r\n      const cartItem = this.cart.find((item) => item.id === product.id);\r\n      if (cartItem) {\r\n        cartItem.quantity++;\r\n      } else {\r\n        this.cart.push({ ...product, quantity: 1 });\r\n      }\r\n    },\r\n    updateSortOrder(order) {\r\n      this.sortOrder = order;\r\n    },\r\n    removeItemCart(item) {\r\n      const cartItemIndex = this.cart.findIndex(\r\n        (cartItem) => cartItem.id === item.id\r\n      );\r\n      if (cartItemIndex > -1) {\r\n        const cartItem = this.cart[cartItemIndex];\r\n        if (cartItem.quantity > 1) {\r\n          cartItem.quantity--;\r\n        } else {\r\n          this.cart.splice(cartItemIndex, 1);\r\n        }\r\n      }\r\n    },\r\n    toggleCart() {\r\n      this.showProduct = !this.showProduct;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchLessons();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}