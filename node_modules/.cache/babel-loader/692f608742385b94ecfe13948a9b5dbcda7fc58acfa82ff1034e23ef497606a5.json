{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_lesson_component = _resolveComponent(\"lesson-component\");\n  const _component_checkout_component = _resolveComponent(\"checkout-component\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", null, [_createElementVNode(\"h1\", null, _toDisplayString($data.sitename), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"cartBtn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleCart && $options.toggleCart(...args))\n  }, \" 🛒 Cart (\" + _toDisplayString($options.cartItemCount) + \") \", 1 /* TEXT */)]), _createElementVNode(\"main\", null, [$data.showProduct ? (_openBlock(), _createBlock(_component_lesson_component, {\n    key: 0,\n    products: $data.products,\n    onAddItemToCart: $options.addItemCart,\n    searchLesson: $data.searchLesson,\n    sortAttribute: $data.sortAttribute,\n    sortOrder: $data.sortOrder\n  }, null, 8 /* PROPS */, [\"products\", \"onAddItemToCart\", \"searchLesson\", \"sortAttribute\", \"sortOrder\"])) : (_openBlock(), _createBlock(_component_checkout_component, {\n    key: 1,\n    cart: $data.cart,\n    onRemoveItemFromCart: $options.removeItemCart,\n    validCheckout: $options.validCheckout,\n    orderSubmitted: $data.orderSubmitted,\n    onSubmitOrder: $options.submitOrder\n  }, null, 8 /* PROPS */, [\"cart\", \"onRemoveItemFromCart\", \"validCheckout\", \"orderSubmitted\", \"onSubmitOrder\"]))])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","sitename","onClick","_cache","args","$options","toggleCart","cartItemCount","showProduct","_createBlock","_component_lesson_component","key","products","onAddItemToCart","addItemCart","searchLesson","sortAttribute","sortOrder","_component_checkout_component","cart","onRemoveItemFromCart","removeItemCart","validCheckout","orderSubmitted","onSubmitOrder","submitOrder"],"sources":["C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\src\\components\\ParentComponent.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header>\r\n      <h1>{{ sitename }}</h1>\r\n      <button id=\"cartBtn\" @click=\"toggleCart\">\r\n        🛒 Cart ({{ cartItemCount }})\r\n      </button>\r\n    </header>\r\n    <main>\r\n      <lesson-component\r\n        v-if=\"showProduct\"\r\n        :products=\"products\"\r\n        @add-item-to-cart=\"addItemCart\"\r\n        :searchLesson=\"searchLesson\"\r\n        :sortAttribute=\"sortAttribute\"\r\n        :sortOrder=\"sortOrder\"\r\n      />\r\n      <checkout-component\r\n        v-else\r\n        :cart=\"cart\"\r\n        @remove-item-from-cart=\"removeItemCart\"\r\n        :validCheckout=\"validCheckout\"\r\n        :orderSubmitted=\"orderSubmitted\"\r\n        @submit-order=\"submitOrder\"\r\n      />\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LessonComponent from \"./LessonComponent.vue\";\r\nimport CheckoutComponent from \"./CheckoutComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    LessonComponent,\r\n    CheckoutComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      sitename: \"👨‍🎓 STUDY SESSION STORE 👩‍🎓\",\r\n      showProduct: true,\r\n      products: [],\r\n      cart: [],\r\n      searchLesson: \"\",\r\n      sortAttribute: \"title\",\r\n      sortOrder: \"\",\r\n      custName: \"\",\r\n      custPhone: \"\",\r\n      orderSubmitted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    cartItemCount() {\r\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    validCheckout() {\r\n      const nameRegex = /^[A-Za-z\\s]+$/;\r\n      const phoneRegex = /^[0-9()-]+$/;\r\n      return nameRegex.test(this.custName) && phoneRegex.test(this.custPhone);\r\n    },\r\n  },\r\n  methods: {\r\n    fetchLessons() {\r\n      fetch(\r\n        \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons\"\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.products = data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching lessons:\", error);\r\n        });\r\n    },\r\n    submitOrder() {\r\n      if (!this.validCheckout) {\r\n        alert(\r\n          \"Please enter a valid name and phone number to submit the order.\"\r\n        );\r\n        return;\r\n      }\r\n      const order = {\r\n        name: this.custName,\r\n        phoneNumber: this.custPhone,\r\n        items: this.cart.map((item) => ({\r\n          lessonId: item._id,\r\n          quantity: item.quantity,\r\n        })),\r\n      };\r\n      console.log(\"Order items before submitting:\", order.items);\r\n      fetch(\r\n        \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/orders\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(order),\r\n        }\r\n      )\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          this.orderSubmitted = true;\r\n          console.log(\"Order submitted:\", data);\r\n          this.cart = [];\r\n          this.custName = \"\";\r\n          this.custPhone = \"\";\r\n          return this.updateLessonSpaces(order.items, true);\r\n        })\r\n        .then(() => {\r\n          this.fetchLessons();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error submitting order:\", error);\r\n        });\r\n    },\r\n    updateLessonSpaces(orderedItems, isOrderSubmitted = false) {\r\n      if (!isOrderSubmitted) {\r\n        return Promise.resolve();\r\n      }\r\n      const updatePromises = orderedItems.map((item) => {\r\n        return fetch(\r\n          `https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons/${item.lessonId}`,\r\n          {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ numberToDecrease: item.quantity }),\r\n          }\r\n        ).then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        });\r\n      });\r\n      return Promise.all(updatePromises)\r\n        .then(() => {\r\n          this.fetchLessons();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating lessons:\", error);\r\n        });\r\n    },\r\n    canAddToCart(product) {\r\n      const cartItem = this.cart.find((item) => item.id === product.id);\r\n      return cartItem\r\n        ? cartItem.quantity < product.availableInventory\r\n        : product.availableInventory > 0;\r\n    },\r\n    addItemCart(product) {\r\n      if (!this.canAddToCart(product)) {\r\n        alert(\"This lesson cannot be added to the cart.\");\r\n        return;\r\n      }\r\n      const cartItem = this.cart.find((item) => item.id === product.id);\r\n      if (cartItem) {\r\n        cartItem.quantity++;\r\n      } else {\r\n        this.cart.push({ ...product, quantity: 1 });\r\n      }\r\n    },\r\n    updateSortOrder(order) {\r\n      this.sortOrder = order;\r\n    },\r\n    removeItemCart(item) {\r\n      const cartItemIndex = this.cart.findIndex(\r\n        (cartItem) => cartItem.id === item.id\r\n      );\r\n      if (cartItemIndex > -1) {\r\n        const cartItem = this.cart[cartItemIndex];\r\n        if (cartItem.quantity > 1) {\r\n          cartItem.quantity--;\r\n        } else {\r\n          this.cart.splice(cartItemIndex, 1);\r\n        }\r\n      }\r\n    },\r\n    toggleCart() {\r\n      this.showProduct = !this.showProduct;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchLessons();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,CAKS,iBAJPA,mBAAA,CAAuB,YAAAC,gBAAA,CAAhBC,KAAA,CAAAC,QAAQ,kBACfH,mBAAA,CAES;IAFDH,EAAE,EAAC,SAAS;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,YAC9B,GAAAL,gBAAA,CAAGM,QAAA,CAAAE,aAAa,IAAG,IAC9B,gB,GAEFT,mBAAA,CAiBO,eAfGE,KAAA,CAAAQ,WAAW,I,cADnBC,YAAA,CAOEC,2BAAA;IAhBRC,GAAA;IAWSC,QAAQ,EAAEZ,KAAA,CAAAY,QAAQ;IAClBC,eAAgB,EAAER,QAAA,CAAAS,WAAW;IAC7BC,YAAY,EAAEf,KAAA,CAAAe,YAAY;IAC1BC,aAAa,EAAEhB,KAAA,CAAAgB,aAAa;IAC5BC,SAAS,EAAEjB,KAAA,CAAAiB;2HAEdR,YAAA,CAOES,6BAAA;IAxBRP,GAAA;IAmBSQ,IAAI,EAAEnB,KAAA,CAAAmB,IAAI;IACVC,oBAAqB,EAAEf,QAAA,CAAAgB,cAAc;IACrCC,aAAa,EAAEjB,QAAA,CAAAiB,aAAa;IAC5BC,cAAc,EAAEvB,KAAA,CAAAuB,cAAc;IAC9BC,aAAY,EAAEnB,QAAA,CAAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}