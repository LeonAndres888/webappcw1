{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LessonComponent from \"./LessonComponent.vue\";\nimport CheckoutComponent from \"./CheckoutComponent.vue\";\nexport default {\n  components: {\n    LessonComponent,\n    CheckoutComponent\n  },\n  data() {\n    return {\n      sitename: \"👨‍🎓 STUDY SESSION STORE 👩‍🎓\",\n      showProduct: true,\n      products: [],\n      cart: [],\n      searchLesson: \"\",\n      sortAttribute: \"title\",\n      sortOrder: \"ascending\",\n      custName: \"\",\n      custPhone: \"\",\n      orderSubmitted: false\n    };\n  },\n  computed: {\n    cartItemCount() {\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\n    },\n    validCheckout() {\n      const nameRegex = /^[A-Za-z\\s]+$/;\n      const phoneRegex = /^[0-9()-]+$/;\n      return nameRegex.test(this.custName) && phoneRegex.test(this.custPhone);\n    }\n  },\n  methods: {\n    fetchLessons() {\n      fetch(\"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons\").then(response => response.json()).then(data => {\n        this.products = data;\n      }).catch(error => {\n        console.error(\"Error fetching lessons:\", error);\n      });\n    },\n    async submitOrder() {\n      if (!this.validCheckout) {\n        alert(\"Please ensure all fields are filled out correctly.\");\n        return;\n      }\n\n      // Validate cart items have valid lesson IDs\n      for (const item of this.cart) {\n        if (!item.id) {\n          console.error(\"Invalid lesson ID found in cart items:\", item);\n          alert(\"An error occurred with the cart items. Please try again.\");\n          return;\n        }\n      }\n\n      // Construct the order payload with validated lesson IDs\n      const orderPayload = {\n        name: this.custName,\n        phoneNumber: this.custPhone,\n        items: this.cart.map(item => ({\n          lessonId: item.lessonId || item.id,\n          // Adjust this line to ensure you use the correct property\n          quantity: item.quantity\n        }))\n      };\n      try {\n        const response = await fetch(\"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/orders\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(orderPayload)\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || \"Failed to submit order.\");\n        }\n        const data = await response.json();\n        console.log(\"Order submitted successfully:\", data);\n\n        // If the order submission was successful, proceed with updating lesson spaces\n        await this.updateLessonSpaces(orderPayload.items, true);\n        this.orderSubmitted = true;\n        this.cart = []; // Clear the cart after successful order submission\n        alert(\"Order has been successfully submitted.\");\n      } catch (error) {\n        console.error(\"Order submission failed:\", error);\n        alert(\"Failed to submit the order. Please check the details and try again.\");\n      }\n    },\n    async updateLessonSpaces(orderedItems, isOrderSubmitted) {\n      if (!isOrderSubmitted) return;\n      try {\n        await Promise.all(orderedItems.map(async item => {\n          // Check if the lessonId is present and is a valid identifier\n          if (!item.id) {\n            console.error(\"Invalid or missing lessonId:\", item);\n            alert(\"An error occurred with the cart items. Please try again.\");\n            return; // Skip this item\n          }\n\n          // Update the PUT request URL to use the correct `item.id`\n          const response = await fetch(`https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons/${item.id}`, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              numberToDecrease: item.quantity\n            })\n          });\n          if (!response.ok) {\n            const responseText = await response.text();\n            throw new Error(`Failed to update lesson space. Server responded with status ${response.status}: ${responseText}`);\n          }\n          console.log(`Lesson space updated for lessonId: ${item.id}`);\n        }));\n        this.fetchLessons(); // Refresh lessons data\n      } catch (error) {\n        console.error(\"Error updating lesson spaces:\", error);\n        alert(\"Failed to update lesson spaces. Please try again.\");\n      }\n    },\n    canAddToCart(product) {\n      // Check if product can be added to cart\n      let cartItem = this.cart.find(item => item.id === product.id);\n      let cartItemCount = cartItem ? cartItem.quantity : 0;\n      return product.availableInventory > cartItemCount;\n    },\n    addItemToCart(lesson) {\n      console.log(\"Adding to cart:\", lesson);\n      // Check if the lesson can be added to the cart based on available inventory\n      if (lesson.availableInventory <= 0) {\n        alert(\"This lesson is fully booked.\");\n        return; // Exit the function if no inventory\n      }\n\n      // Decrease the available inventory by 1\n      lesson.availableInventory--;\n\n      // Add the lesson to the cart\n      let cartItem = this.cart.find(item => item.id === lesson.id);\n      if (cartItem) {\n        cartItem.quantity++;\n      } else {\n        this.cart.push({\n          ...lesson,\n          quantity: 1\n        });\n      }\n    },\n    updateSortOrder(order) {\n      // Update sorting order based on asc or dsc buttons\n      this.sortOrder = order;\n    },\n    removeItemFromCart(item) {\n      let cartItemIndex = this.cart.findIndex(cartItem => cartItem.id === item.id);\n      if (cartItemIndex > -1) {\n        let cartItem = this.cart[cartItemIndex];\n        if (cartItem.quantity > 1) {\n          cartItem.quantity--;\n        } else {\n          this.cart.splice(cartItemIndex, 1);\n        }\n        // Increase the available inventory by 1\n        let lesson = this.products.find(lesson => lesson.id === item.id);\n        if (lesson) {\n          lesson.availableInventory++;\n        }\n      }\n    },\n    toggleCart() {\n      this.showProduct = !this.showProduct;\n    }\n  },\n  mounted() {\n    this.fetchLessons();\n  }\n};","map":{"version":3,"names":["LessonComponent","CheckoutComponent","components","data","sitename","showProduct","products","cart","searchLesson","sortAttribute","sortOrder","custName","custPhone","orderSubmitted","computed","cartItemCount","reduce","total","item","quantity","validCheckout","nameRegex","phoneRegex","test","methods","fetchLessons","fetch","then","response","json","catch","error","console","submitOrder","alert","id","orderPayload","name","phoneNumber","items","map","lessonId","method","headers","body","JSON","stringify","ok","errorData","Error","message","log","updateLessonSpaces","orderedItems","isOrderSubmitted","Promise","all","numberToDecrease","responseText","text","status","canAddToCart","product","cartItem","find","availableInventory","addItemToCart","lesson","push","updateSortOrder","order","removeItemFromCart","cartItemIndex","findIndex","splice","toggleCart","mounted"],"sources":["C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\src\\components\\ParentComponent.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header>\r\n      <h1 id=\"titlename\">{{ sitename }}</h1>\r\n      <button id=\"cartBtn\" @click=\"toggleCart\">\r\n        🛒 Cart ({{ cartItemCount }})\r\n      </button>\r\n    </header>\r\n    <main>\r\n      <lesson-component\r\n        v-if=\"showProduct\"\r\n        :products=\"products\"\r\n        @add-item-to-cart=\"addItemToCart\"\r\n        :searchLesson=\"searchLesson\"\r\n        :sortAttribute=\"sortAttribute\"\r\n        :sortOrder=\"sortOrder\"\r\n        @update:searchLesson=\"searchLesson = $event\"\r\n        @update:sortAttribute=\"sortAttribute = $event\"\r\n        @update-sort-order=\"sortOrder = $event\"\r\n      />\r\n\r\n      <checkout-component\r\n        v-else\r\n        :cart=\"cart\"\r\n        @remove-item-from-cart=\"removeItemFromCart\"\r\n        @submit-order=\"submitOrder\"\r\n        :validCheckout=\"validCheckout\"\r\n        :orderSubmitted=\"orderSubmitted\"\r\n      />\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LessonComponent from \"./LessonComponent.vue\";\r\nimport CheckoutComponent from \"./CheckoutComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    LessonComponent,\r\n    CheckoutComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      sitename: \"👨‍🎓 STUDY SESSION STORE 👩‍🎓\",\r\n      showProduct: true,\r\n      products: [],\r\n      cart: [],\r\n      searchLesson: \"\",\r\n      sortAttribute: \"title\",\r\n      sortOrder: \"ascending\",\r\n      custName: \"\",\r\n      custPhone: \"\",\r\n      orderSubmitted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    cartItemCount() {\r\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    validCheckout() {\r\n      const nameRegex = /^[A-Za-z\\s]+$/;\r\n      const phoneRegex = /^[0-9()-]+$/;\r\n      return nameRegex.test(this.custName) && phoneRegex.test(this.custPhone);\r\n    },\r\n  },\r\n  methods: {\r\n    fetchLessons() {\r\n      fetch(\r\n        \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons\"\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.products = data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching lessons:\", error);\r\n        });\r\n    },\r\n    async submitOrder() {\r\n      if (!this.validCheckout) {\r\n        alert(\"Please ensure all fields are filled out correctly.\");\r\n        return;\r\n      }\r\n\r\n      // Validate cart items have valid lesson IDs\r\n      for (const item of this.cart) {\r\n        if (!item.id) {\r\n          console.error(\"Invalid lesson ID found in cart items:\", item);\r\n          alert(\"An error occurred with the cart items. Please try again.\");\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Construct the order payload with validated lesson IDs\r\n      const orderPayload = {\r\n        name: this.custName,\r\n        phoneNumber: this.custPhone,\r\n        items: this.cart.map((item) => ({\r\n          lessonId: item.lessonId || item.id, // Adjust this line to ensure you use the correct property\r\n          quantity: item.quantity,\r\n        })),\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(\r\n          \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/orders\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(orderPayload),\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.message || \"Failed to submit order.\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"Order submitted successfully:\", data);\r\n\r\n        // If the order submission was successful, proceed with updating lesson spaces\r\n        await this.updateLessonSpaces(orderPayload.items, true);\r\n\r\n        this.orderSubmitted = true;\r\n        this.cart = []; // Clear the cart after successful order submission\r\n        alert(\"Order has been successfully submitted.\");\r\n      } catch (error) {\r\n        console.error(\"Order submission failed:\", error);\r\n        alert(\r\n          \"Failed to submit the order. Please check the details and try again.\"\r\n        );\r\n      }\r\n    },\r\n    async updateLessonSpaces(orderedItems, isOrderSubmitted) {\r\n      if (!isOrderSubmitted) return;\r\n\r\n      try {\r\n        await Promise.all(\r\n          orderedItems.map(async (item) => {\r\n            // Check if the lessonId is present and is a valid identifier\r\n            if (!item.id) {\r\n              console.error(\"Invalid or missing lessonId:\", item);\r\n              alert(\"An error occurred with the cart items. Please try again.\");\r\n              return; // Skip this item\r\n            }\r\n\r\n            // Update the PUT request URL to use the correct `item.id`\r\n            const response = await fetch(\r\n              `https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons/${item.id}`,\r\n              {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ numberToDecrease: item.quantity }),\r\n              }\r\n            );\r\n\r\n            if (!response.ok) {\r\n              const responseText = await response.text();\r\n              throw new Error(\r\n                `Failed to update lesson space. Server responded with status ${response.status}: ${responseText}`\r\n              );\r\n            }\r\n\r\n            console.log(`Lesson space updated for lessonId: ${item.id}`);\r\n          })\r\n        );\r\n\r\n        this.fetchLessons(); // Refresh lessons data\r\n      } catch (error) {\r\n        console.error(\"Error updating lesson spaces:\", error);\r\n        alert(\"Failed to update lesson spaces. Please try again.\");\r\n      }\r\n    },\r\n\r\n    canAddToCart(product) {\r\n      // Check if product can be added to cart\r\n      let cartItem = this.cart.find((item) => item.id === product.id);\r\n      let cartItemCount = cartItem ? cartItem.quantity : 0;\r\n      return product.availableInventory > cartItemCount;\r\n    },\r\n    addItemToCart(lesson) {\r\n      console.log(\"Adding to cart:\", lesson);\r\n      // Check if the lesson can be added to the cart based on available inventory\r\n      if (lesson.availableInventory <= 0) {\r\n        alert(\"This lesson is fully booked.\");\r\n        return; // Exit the function if no inventory\r\n      }\r\n\r\n      // Decrease the available inventory by 1\r\n      lesson.availableInventory--;\r\n\r\n      // Add the lesson to the cart\r\n      let cartItem = this.cart.find((item) => item.id === lesson.id);\r\n      if (cartItem) {\r\n        cartItem.quantity++;\r\n      } else {\r\n        this.cart.push({ ...lesson, quantity: 1 });\r\n      }\r\n    },\r\n    updateSortOrder(order) {\r\n      // Update sorting order based on asc or dsc buttons\r\n      this.sortOrder = order;\r\n    },\r\n    removeItemFromCart(item) {\r\n      let cartItemIndex = this.cart.findIndex(\r\n        (cartItem) => cartItem.id === item.id\r\n      );\r\n      if (cartItemIndex > -1) {\r\n        let cartItem = this.cart[cartItemIndex];\r\n        if (cartItem.quantity > 1) {\r\n          cartItem.quantity--;\r\n        } else {\r\n          this.cart.splice(cartItemIndex, 1);\r\n        }\r\n        // Increase the available inventory by 1\r\n        let lesson = this.products.find((lesson) => lesson.id === item.id);\r\n        if (lesson) {\r\n          lesson.availableInventory++;\r\n        }\r\n      }\r\n    },\r\n    toggleCart() {\r\n      this.showProduct = !this.showProduct;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchLessons();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dropDown {\r\n  border-radius: 5px;\r\n  height: 30px;\r\n  width: 110px;\r\n  margin-right: 40px;\r\n  position: absolute;\r\n  left: 500px;\r\n  top: 140px;\r\n}\r\nbutton {\r\n  padding: 8px 20px;\r\n  border: none;\r\n  background-color: #2a2a2a;\r\n  color: #ffffff;\r\n  transition: background-color 0.6s ease;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n}\r\n#cartBtn {\r\n  border-radius: 5px;\r\n  height: 70px;\r\n  width: 180px;\r\n  position: absolute;\r\n  right: 100px;\r\n  top: 50px;\r\n}\r\n#titlename {\r\n  font-size: 50px;\r\n  font-weight: bold;\r\n  color: #712626;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #676767;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n#searchBar {\r\n  width: 200px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  position: absolute;\r\n  top: 130px;\r\n  left: 660px;\r\n}\r\n\r\n#ascButton {\r\n  border-radius: 5px;\r\n  height: 30px;\r\n  width: 110px;\r\n  margin-right: 40px;\r\n  position: absolute;\r\n  left: 230px;\r\n  top: 140px;\r\n}\r\n#dscButton {\r\n  border-radius: 5px;\r\n  height: 30px;\r\n  width: 110px;\r\n  position: absolute;\r\n  left: 350px;\r\n  top: 140px;\r\n}\r\n</style>\r\n"],"mappings":";AAkCA,OAAOA,eAAc,MAAO,uBAAuB;AACnD,OAAOC,iBAAgB,MAAO,yBAAyB;AAEvD,eAAe;EACbC,UAAU,EAAE;IACVF,eAAe;IACfC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,iCAAiC;MAC3CC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,OAAO;MACtBC,SAAS,EAAE,WAAW;MACtBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACpE,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,MAAMC,SAAQ,GAAI,eAAe;MACjC,MAAMC,UAAS,GAAI,aAAa;MAChC,OAAOD,SAAS,CAACE,IAAI,CAAC,IAAI,CAACZ,QAAQ,KAAKW,UAAU,CAACC,IAAI,CAAC,IAAI,CAACX,SAAS,CAAC;IACzE;EACF,CAAC;EACDY,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACbC,KAAK,CACH,gFACF,EACGC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAExB,IAAI,IAAK;QACd,IAAI,CAACG,QAAO,GAAIH,IAAI;MACtB,CAAC,EACA2B,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACb,aAAa,EAAE;QACvBc,KAAK,CAAC,oDAAoD,CAAC;QAC3D;MACF;;MAEA;MACA,KAAK,MAAMhB,IAAG,IAAK,IAAI,CAACX,IAAI,EAAE;QAC5B,IAAI,CAACW,IAAI,CAACiB,EAAE,EAAE;UACZH,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEb,IAAI,CAAC;UAC7DgB,KAAK,CAAC,0DAA0D,CAAC;UACjE;QACF;MACF;;MAEA;MACA,MAAME,YAAW,GAAI;QACnBC,IAAI,EAAE,IAAI,CAAC1B,QAAQ;QACnB2B,WAAW,EAAE,IAAI,CAAC1B,SAAS;QAC3B2B,KAAK,EAAE,IAAI,CAAChC,IAAI,CAACiC,GAAG,CAAEtB,IAAI,KAAM;UAC9BuB,QAAQ,EAAEvB,IAAI,CAACuB,QAAO,IAAKvB,IAAI,CAACiB,EAAE;UAAE;UACpChB,QAAQ,EAAED,IAAI,CAACC;QACjB,CAAC,CAAC;MACJ,CAAC;MAED,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMF,KAAK,CAC1B,+EAA+E,EAC/E;UACEgB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,YAAY;QACnC,CACF,CAAC;QAED,IAAI,CAACR,QAAQ,CAACmB,EAAE,EAAE;UAChB,MAAMC,SAAQ,GAAI,MAAMpB,QAAQ,CAACC,IAAI,CAAC,CAAC;UACvC,MAAM,IAAIoB,KAAK,CAACD,SAAS,CAACE,OAAM,IAAK,yBAAyB,CAAC;QACjE;QAEA,MAAM/C,IAAG,GAAI,MAAMyB,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClCG,OAAO,CAACmB,GAAG,CAAC,+BAA+B,EAAEhD,IAAI,CAAC;;QAElD;QACA,MAAM,IAAI,CAACiD,kBAAkB,CAAChB,YAAY,CAACG,KAAK,EAAE,IAAI,CAAC;QAEvD,IAAI,CAAC1B,cAAa,GAAI,IAAI;QAC1B,IAAI,CAACN,IAAG,GAAI,EAAE,EAAE;QAChB2B,KAAK,CAAC,wCAAwC,CAAC;MACjD,EAAE,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDG,KAAK,CACH,qEACF,CAAC;MACH;IACF,CAAC;IACD,MAAMkB,kBAAkBA,CAACC,YAAY,EAAEC,gBAAgB,EAAE;MACvD,IAAI,CAACA,gBAAgB,EAAE;MAEvB,IAAI;QACF,MAAMC,OAAO,CAACC,GAAG,CACfH,YAAY,CAACb,GAAG,CAAC,MAAOtB,IAAI,IAAK;UAC/B;UACA,IAAI,CAACA,IAAI,CAACiB,EAAE,EAAE;YACZH,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEb,IAAI,CAAC;YACnDgB,KAAK,CAAC,0DAA0D,CAAC;YACjE,OAAM,CAAE;UACV;;UAEA;UACA,MAAMN,QAAO,GAAI,MAAMF,KAAK,CACzB,kFAAiFR,IAAI,CAACiB,EAAG,EAAC,EAC3F;YACEO,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB,CAAC;YAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEW,gBAAgB,EAAEvC,IAAI,CAACC;YAAS,CAAC;UAC1D,CACF,CAAC;UAED,IAAI,CAACS,QAAQ,CAACmB,EAAE,EAAE;YAChB,MAAMW,YAAW,GAAI,MAAM9B,QAAQ,CAAC+B,IAAI,CAAC,CAAC;YAC1C,MAAM,IAAIV,KAAK,CACZ,+DAA8DrB,QAAQ,CAACgC,MAAO,KAAIF,YAAa,EAClG,CAAC;UACH;UAEA1B,OAAO,CAACmB,GAAG,CAAE,sCAAqCjC,IAAI,CAACiB,EAAG,EAAC,CAAC;QAC9D,CAAC,CACH,CAAC;QAED,IAAI,CAACV,YAAY,CAAC,CAAC,EAAE;MACvB,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDG,KAAK,CAAC,mDAAmD,CAAC;MAC5D;IACF,CAAC;IAED2B,YAAYA,CAACC,OAAO,EAAE;MACpB;MACA,IAAIC,QAAO,GAAI,IAAI,CAACxD,IAAI,CAACyD,IAAI,CAAE9C,IAAI,IAAKA,IAAI,CAACiB,EAAC,KAAM2B,OAAO,CAAC3B,EAAE,CAAC;MAC/D,IAAIpB,aAAY,GAAIgD,QAAO,GAAIA,QAAQ,CAAC5C,QAAO,GAAI,CAAC;MACpD,OAAO2C,OAAO,CAACG,kBAAiB,GAAIlD,aAAa;IACnD,CAAC;IACDmD,aAAaA,CAACC,MAAM,EAAE;MACpBnC,OAAO,CAACmB,GAAG,CAAC,iBAAiB,EAAEgB,MAAM,CAAC;MACtC;MACA,IAAIA,MAAM,CAACF,kBAAiB,IAAK,CAAC,EAAE;QAClC/B,KAAK,CAAC,8BAA8B,CAAC;QACrC,OAAM,CAAE;MACV;;MAEA;MACAiC,MAAM,CAACF,kBAAkB,EAAE;;MAE3B;MACA,IAAIF,QAAO,GAAI,IAAI,CAACxD,IAAI,CAACyD,IAAI,CAAE9C,IAAI,IAAKA,IAAI,CAACiB,EAAC,KAAMgC,MAAM,CAAChC,EAAE,CAAC;MAC9D,IAAI4B,QAAQ,EAAE;QACZA,QAAQ,CAAC5C,QAAQ,EAAE;MACrB,OAAO;QACL,IAAI,CAACZ,IAAI,CAAC6D,IAAI,CAAC;UAAE,GAAGD,MAAM;UAAEhD,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC5C;IACF,CAAC;IACDkD,eAAeA,CAACC,KAAK,EAAE;MACrB;MACA,IAAI,CAAC5D,SAAQ,GAAI4D,KAAK;IACxB,CAAC;IACDC,kBAAkBA,CAACrD,IAAI,EAAE;MACvB,IAAIsD,aAAY,GAAI,IAAI,CAACjE,IAAI,CAACkE,SAAS,CACpCV,QAAQ,IAAKA,QAAQ,CAAC5B,EAAC,KAAMjB,IAAI,CAACiB,EACrC,CAAC;MACD,IAAIqC,aAAY,GAAI,CAAC,CAAC,EAAE;QACtB,IAAIT,QAAO,GAAI,IAAI,CAACxD,IAAI,CAACiE,aAAa,CAAC;QACvC,IAAIT,QAAQ,CAAC5C,QAAO,GAAI,CAAC,EAAE;UACzB4C,QAAQ,CAAC5C,QAAQ,EAAE;QACrB,OAAO;UACL,IAAI,CAACZ,IAAI,CAACmE,MAAM,CAACF,aAAa,EAAE,CAAC,CAAC;QACpC;QACA;QACA,IAAIL,MAAK,GAAI,IAAI,CAAC7D,QAAQ,CAAC0D,IAAI,CAAEG,MAAM,IAAKA,MAAM,CAAChC,EAAC,KAAMjB,IAAI,CAACiB,EAAE,CAAC;QAClE,IAAIgC,MAAM,EAAE;UACVA,MAAM,CAACF,kBAAkB,EAAE;QAC7B;MACF;IACF,CAAC;IACDU,UAAUA,CAAA,EAAG;MACX,IAAI,CAACtE,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;IACtC;EACF,CAAC;EACDuE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACnD,YAAY,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}