{"ast":null,"code":"import Vue from \"vue\";\nimport App from \"./App.vue\";\nVue.config.productionTip = false;\nnew Vue({\n  render: h => h(App)\n}).$mount(\"#app\");\n\n// Check that service workers are supported\nif (\"serviceWorker\" in navigator) {\n  window.addEventListener(\"load\", () => {\n    navigator.serviceWorker.register(\"/service-worker.js\").then(registration => {\n      console.log(\"SW registered: \", registration);\n    }).catch(registrationError => {\n      console.log(\"SW registration failed: \", registrationError);\n    });\n  });\n}","map":{"version":3,"names":["Vue","App","config","productionTip","render","h","$mount","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","catch","registrationError"],"sources":["C:/Users/andre/OneDrive/Desktop/CW2FinalFolder/webappcw1/src/main.js"],"sourcesContent":["import Vue from \"vue\";\nimport App from \"./App.vue\";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount(\"#app\");\n\n// Check that service workers are supported\nif (\"serviceWorker\" in navigator) {\n  window.addEventListener(\"load\", () => {\n    navigator.serviceWorker\n      .register(\"/service-worker.js\")\n      .then((registration) => {\n        console.log(\"SW registered: \", registration);\n      })\n      .catch((registrationError) => {\n        console.log(\"SW registration failed: \", registrationError);\n      });\n  });\n}\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAE3BD,GAAG,CAACE,MAAM,CAACC,aAAa,GAAG,KAAK;AAEhC,IAAIH,GAAG,CAAC;EACNI,MAAM,EAAGC,CAAC,IAAKA,CAAC,CAACJ,GAAG;AACtB,CAAC,CAAC,CAACK,MAAM,CAAC,MAAM,CAAC;;AAEjB;AACA,IAAI,eAAe,IAAIC,SAAS,EAAE;EAChCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;IACpCF,SAAS,CAACG,aAAa,CACpBC,QAAQ,CAAC,oBAAoB,CAAC,CAC9BC,IAAI,CAAEC,YAAY,IAAK;MACtBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,YAAY,CAAC;IAC9C,CAAC,CAAC,CACDG,KAAK,CAAEC,iBAAiB,IAAK;MAC5BH,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,iBAAiB,CAAC;IAC5D,CAAC,CAAC;EACN,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}