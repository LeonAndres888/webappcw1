{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LessonComponent from \"./LessonComponent.vue\";\nimport CheckoutComponent from \"./CheckoutComponent.vue\";\nexport default {\n  components: {\n    LessonComponent,\n    CheckoutComponent\n  },\n  data() {\n    return {\n      sitename: \"👨‍🎓 STUDY SESSION STORE 👩‍🎓\",\n      showProduct: true,\n      products: [],\n      cart: [],\n      searchLesson: \"\",\n      sortAttribute: \"title\",\n      sortOrder: \"ascending\",\n      custName: \"\",\n      custPhone: \"\",\n      orderSubmitted: false\n    };\n  },\n  computed: {\n    cartItemCount() {\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\n    },\n    validCheckout() {\n      const nameRegex = /^[A-Za-z\\s]+$/;\n      const phoneRegex = /^[0-9()-]+$/;\n      return nameRegex.test(this.custName) && phoneRegex.test(this.custPhone);\n    }\n  },\n  methods: {\n    fetchLessons() {\n      fetch(\"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons\").then(response => response.json()).then(data => {\n        this.products = data;\n      }).catch(error => {\n        console.error(\"Error fetching lessons:\", error);\n      });\n    },\n    submitOrder(orderDetails) {\n      // Validation logic if needed\n      if (!this.validateOrder(orderDetails)) {\n        alert(\"Invalid order details.\");\n        return;\n      }\n      const apiEndpoint = \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/orders\";\n      fetch(apiEndpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: orderDetails.name,\n          phoneNumber: orderDetails.phone,\n          items: this.cart.map(({\n            id,\n            quantity\n          }) => ({\n            lessonId: id,\n            quantity\n          }))\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(\"Order submitted successfully:\", data);\n        this.orderSubmitted = true; // Update state as needed\n        this.cart = []; // Clear the cart\n      }).catch(error => console.error(\"Order submission failed:\", error));\n    },\n    updateLessonSpaces(orderedItems, isOrderSubmitted = false) {\n      // Updates available space in lessons after an order is submitted\n      if (!isOrderSubmitted) {\n        return Promise.resolve();\n      }\n      const updatePromises = orderedItems.map(item => {\n        return fetch(`https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons/${item.lessonId}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            numberToDecrease: item.quantity\n          })\n        }).then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        });\n      });\n      return Promise.all(updatePromises).then(() => {\n        this.fetchLessons(); // Fetch the updated lessons data\n      }).catch(error => {\n        console.error(\"Error updating lessons:\", error);\n      });\n    },\n    canAddToCart(product) {\n      // Check if product can be added to cart\n      let cartItem = this.cart.find(item => item.id === product.id);\n      let cartItemCount = cartItem ? cartItem.quantity : 0;\n      return product.availableInventory > cartItemCount;\n    },\n    addItemCart(lesson) {\n      // Check if the lesson can be added to the cart based on available inventory\n      if (lesson.availableInventory <= 0) {\n        alert(\"This lesson is fully booked.\");\n        return; // Exit the function if no inventory\n      }\n\n      // Decrease the available inventory by 1\n      lesson.availableInventory--;\n\n      // Add the lesson to the cart\n      let cartItem = this.cart.find(item => item.id === lesson.id);\n      if (cartItem) {\n        cartItem.quantity++;\n      } else {\n        this.cart.push({\n          ...lesson,\n          quantity: 1\n        });\n      }\n    },\n    updateSortOrder(order) {\n      // Update sorting order based on asc or dsc buttons\n      this.sortOrder = order;\n    },\n    removeItemFromCart(item) {\n      let cartItemIndex = this.cart.findIndex(cartItem => cartItem.id === item.id);\n      if (cartItemIndex > -1) {\n        let cartItem = this.cart[cartItemIndex];\n        if (cartItem.quantity > 1) {\n          cartItem.quantity--;\n        } else {\n          this.cart.splice(cartItemIndex, 1);\n        }\n        // Increase the available inventory by 1\n        let lesson = this.products.find(lesson => lesson.id === item.id);\n        if (lesson) {\n          lesson.availableInventory++;\n        }\n      }\n    },\n    toggleCart() {\n      this.showProduct = !this.showProduct;\n    }\n  },\n  mounted() {\n    this.fetchLessons();\n  }\n};","map":{"version":3,"names":["LessonComponent","CheckoutComponent","components","data","sitename","showProduct","products","cart","searchLesson","sortAttribute","sortOrder","custName","custPhone","orderSubmitted","computed","cartItemCount","reduce","total","item","quantity","validCheckout","nameRegex","phoneRegex","test","methods","fetchLessons","fetch","then","response","json","catch","error","console","submitOrder","orderDetails","validateOrder","alert","apiEndpoint","method","headers","body","JSON","stringify","name","phoneNumber","phone","items","map","id","lessonId","log","updateLessonSpaces","orderedItems","isOrderSubmitted","Promise","resolve","updatePromises","numberToDecrease","ok","Error","status","all","canAddToCart","product","cartItem","find","availableInventory","addItemCart","lesson","push","updateSortOrder","order","removeItemFromCart","cartItemIndex","findIndex","splice","toggleCart","mounted"],"sources":["C:\\Users\\andre\\OneDrive\\Desktop\\CW2FinalFolder\\webappcw1\\src\\components\\ParentComponent.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header>\r\n      <h1 id=\"titlename\">{{ sitename }}</h1>\r\n      <button id=\"cartBtn\" @click=\"toggleCart\">\r\n        🛒 Cart ({{ cartItemCount }})\r\n      </button>\r\n    </header>\r\n    <main>\r\n      <lesson-component\r\n        v-if=\"showProduct\"\r\n        :products=\"products\"\r\n        @add-item-to-cart=\"addItemToCart\"\r\n        :searchLesson=\"searchLesson\"\r\n        :sortAttribute=\"sortAttribute\"\r\n        :sortOrder=\"sortOrder\"\r\n        @update:searchLesson=\"searchLesson = $event\"\r\n        @update:sortAttribute=\"sortAttribute = $event\"\r\n        @update-sort-order=\"sortOrder = $event\"\r\n      />\r\n      <checkout-component\r\n        v-else\r\n        :cart=\"cart\"\r\n        @remove-item-from-cart=\"removeItemFromCart\"\r\n        @submit-order=\"submitOrder\"\r\n        :validCheckout=\"validCheckout\"\r\n        :orderSubmitted=\"orderSubmitted\"\r\n      />\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LessonComponent from \"./LessonComponent.vue\";\r\nimport CheckoutComponent from \"./CheckoutComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    LessonComponent,\r\n    CheckoutComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      sitename: \"👨‍🎓 STUDY SESSION STORE 👩‍🎓\",\r\n      showProduct: true,\r\n      products: [],\r\n      cart: [],\r\n      searchLesson: \"\",\r\n      sortAttribute: \"title\",\r\n      sortOrder: \"ascending\",\r\n      custName: \"\",\r\n      custPhone: \"\",\r\n      orderSubmitted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    cartItemCount() {\r\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    validCheckout() {\r\n      const nameRegex = /^[A-Za-z\\s]+$/;\r\n      const phoneRegex = /^[0-9()-]+$/;\r\n      return nameRegex.test(this.custName) && phoneRegex.test(this.custPhone);\r\n    },\r\n  },\r\n  methods: {\r\n    fetchLessons() {\r\n      fetch(\r\n        \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons\"\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.products = data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching lessons:\", error);\r\n        });\r\n    },\r\n    submitOrder(orderDetails) {\r\n      // Validation logic if needed\r\n      if (!this.validateOrder(orderDetails)) {\r\n        alert(\"Invalid order details.\");\r\n        return;\r\n      }\r\n\r\n      const apiEndpoint =\r\n        \"https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/orders\";\r\n      fetch(apiEndpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          name: orderDetails.name,\r\n          phoneNumber: orderDetails.phone,\r\n          items: this.cart.map(({ id, quantity }) => ({\r\n            lessonId: id,\r\n            quantity,\r\n          })),\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Order submitted successfully:\", data);\r\n          this.orderSubmitted = true; // Update state as needed\r\n          this.cart = []; // Clear the cart\r\n        })\r\n        .catch((error) => console.error(\"Order submission failed:\", error));\r\n    },\r\n    updateLessonSpaces(orderedItems, isOrderSubmitted = false) {\r\n      // Updates available space in lessons after an order is submitted\r\n      if (!isOrderSubmitted) {\r\n        return Promise.resolve();\r\n      }\r\n\r\n      const updatePromises = orderedItems.map((item) => {\r\n        return fetch(\r\n          `https://storefinal-env.eba-vfsgptpf.us-east-1.elasticbeanstalk.com/api/lessons/${item.lessonId}`,\r\n          {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ numberToDecrease: item.quantity }),\r\n          }\r\n        ).then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        });\r\n      });\r\n\r\n      return Promise.all(updatePromises)\r\n        .then(() => {\r\n          this.fetchLessons(); // Fetch the updated lessons data\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating lessons:\", error);\r\n        });\r\n    },\r\n    canAddToCart(product) {\r\n      // Check if product can be added to cart\r\n      let cartItem = this.cart.find((item) => item.id === product.id);\r\n      let cartItemCount = cartItem ? cartItem.quantity : 0;\r\n      return product.availableInventory > cartItemCount;\r\n    },\r\n    addItemCart(lesson) {\r\n      // Check if the lesson can be added to the cart based on available inventory\r\n      if (lesson.availableInventory <= 0) {\r\n        alert(\"This lesson is fully booked.\");\r\n        return; // Exit the function if no inventory\r\n      }\r\n\r\n      // Decrease the available inventory by 1\r\n      lesson.availableInventory--;\r\n\r\n      // Add the lesson to the cart\r\n      let cartItem = this.cart.find((item) => item.id === lesson.id);\r\n      if (cartItem) {\r\n        cartItem.quantity++;\r\n      } else {\r\n        this.cart.push({ ...lesson, quantity: 1 });\r\n      }\r\n    },\r\n    updateSortOrder(order) {\r\n      // Update sorting order based on asc or dsc buttons\r\n      this.sortOrder = order;\r\n    },\r\n    removeItemFromCart(item) {\r\n      let cartItemIndex = this.cart.findIndex(\r\n        (cartItem) => cartItem.id === item.id\r\n      );\r\n      if (cartItemIndex > -1) {\r\n        let cartItem = this.cart[cartItemIndex];\r\n        if (cartItem.quantity > 1) {\r\n          cartItem.quantity--;\r\n        } else {\r\n          this.cart.splice(cartItemIndex, 1);\r\n        }\r\n        // Increase the available inventory by 1\r\n        let lesson = this.products.find((lesson) => lesson.id === item.id);\r\n        if (lesson) {\r\n          lesson.availableInventory++;\r\n        }\r\n      }\r\n    },\r\n    toggleCart() {\r\n      this.showProduct = !this.showProduct;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchLessons();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n  padding: 8px 20px;\r\n  border: none;\r\n  background-color: #2a2a2a;\r\n  color: #ffffff;\r\n  transition: background-color 0.6s ease;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n}\r\n#cartBtn {\r\n  border-radius: 5px;\r\n  height: 70px;\r\n  width: 180px;\r\n  position: absolute;\r\n  right: 100px;\r\n  top: 50px;\r\n}\r\n#titlename {\r\n  font-size: 50px;\r\n  font-weight: bold;\r\n  color: #712626;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #676767;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n#searchBar {\r\n  width: 200px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  position: absolute;\r\n  top: 130px;\r\n  left: 660px;\r\n}\r\n\r\n#ascButton {\r\n  border-radius: 5px;\r\n  height: 30px;\r\n  width: 110px;\r\n  margin-right: 40px;\r\n  position: absolute;\r\n  left: 230px;\r\n  top: 140px;\r\n}\r\n#dscButton {\r\n  border-radius: 5px;\r\n  height: 30px;\r\n  width: 110px;\r\n  position: absolute;\r\n  left: 350px;\r\n  top: 140px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}